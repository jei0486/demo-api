plugins {
	id 'org.springframework.boot' version '2.6.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}




dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
}

tasks.named('test') {
	useJUnitPlatform()
}

// dockerizing & deploy
jib {
	from {
		image='openjdk:11.0.14.1-jre'
	}

	to {
		image='jei0486/demo-api'

		def imageTag = System.getenv('TAG') ?: 'v1'

		tags=[imageTag]
	}

	container {
		creationTime='USE_CURRENT_TIMESTAMP'
		format='OCI'
	}

	extraDirectories {
		paths {
			path {
				from = file('build/libs')
			}
		}
	}
}
